% @comment{Struktur kann hier eingesehen werden: https://en.wikipedia.org/wiki/BibTeX}
% @comment{WICHTIG: Es darf nirgendwo ein &-Zeichen verwendet werden! Immer auf "und" oder "and" wechseln!}
%
% @comment{Firmennamen/Eigennamen, die exakt so dargestellt werden sollen, müssen in doppelten geschweiften Klammern geschrieben werden}
%
% @comment{Ein Autor würde einfach "Nachname, Vorname" stehen, bei mehreren Autoren immer ein "and" dazwischen packen - übersetzt wird es automatisch}

@misc{BavariaIpsum,
	author = {{aurum:media}},
	title = {Bavaria Ipsum},
	year = {2012},
	url = {http://bavaria-ipsum.de/},
	note = {Online abgerufen am 16. Dezember 2020},
}

@article{HeiseHarterWettbewerb,
	author = {Schüler, Peter and Tonekaboni, Keywan},
	title = {Harter Wettbewerb},
	subtitle = {Sieben Messenger gegen WhatsApp},
	journal = {c't},
	volume = {11},
	year = {2019},
	pages = {72--79},
}

@image{HDBWLogo,
	author = {{Hochschule der Bayerischen Wirtschaft (HDBW) gemeinnützige GmbH}},
	title = {HDBW Logo},
	year = {2020},
	url = {
	       https://www.hdbw-hochschule.de/templates/hdbw2017/images/hdbw-logo.svg
	       },
	note = {Online abgerufen am 16. Dezember 2020},
}

@online{SecLists/XSSPayloadbox,
	author = {{danielmiessler/seclists}},
	title = {XSS-payloadbox.txt},
	year = {2024},
	url = {
	       https://github.com/danielmiessler/SecLists/blob/master/Fuzzing/XSS/human-friendly/XSS-payloadbox.txt
	       },
	note = {Last accessed at 04/04/2024},
}

@online{cr0hn/NoSQLWordlists,
	author = {{cr0hn/nosqlinjection_wordlists}},
	title = {mongodb_noqsli.txt},
	year = {2021},
	url = {
	       https://github.com/cr0hn/nosqlinjection_wordlists/blob/master/mongodb_nosqli.txt
	       },
	note = {Last accessed at 04/04/2024},
}

@online{PayloadsAllTheThings/NoSQLInjection,
	author = {{pentest-tools/PayloadsAllTheThings}},
	title = {NoSQL injection},
	year = {2022},
	url = {
	       https://gitlab.com/pentest-tools/PayloadsAllTheThings/tree/master/NoSQL%20Injection
	       },
	note = {Last accessed at 04/04/2024},
}

@online{HackTricks/WAFBypass,
	author = {{HackTricks Team}},
	title = {WAF Bypass},
	year = {2024},
	url = {
	       https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/waf-bypass
	       },
	note = {Last accessed at 04/04/2024},
}

@online{Cisco/SnortRulesDownload,
	author = {Cisco},
	title = {Rules},
	year = {2024},
	url = {https://www.snort.org/downloads#rules},
	note = {Last accessed at 04/04/2024},
}

@online{Cisco/SnortRulesDocs,
	author = {Cisco},
	title = {Snort Rules},
	year = {2024},
	url = {https://docs.snort.org/start/rules},
	note = {Last accessed at 04/04/2024},
}

@online{wargio/naxsiRules,
	author = {{wargio/naxsi}},
	title = {naxsi\_rules},
	year = {2024},
	url = { https://github.com/wargio/naxsi/tree/main/naxsi_rules },
	note = {Last accessed at 04/04/2024},
}

@online{OWASP/CRS,
	author = {{OWASP Foundation, Inc}},
	title = {OWASP ModSecurity Core Rule Set (CRS)},
	year = {2024},
	url = { https://coreruleset.org/ },
	note = {Last accessed at 04/04/2024},
}

@online{OWASP/BrokenAccessControl,
	author = {{OWASP Foundation, Inc}},
	title = {A01:2021 – Broken Access Control)},
	year = {2021},
	url = { https://owasp.org/Top10/A01_2021-Broken_Access_Control/ },
	note = {Last accessed at 04/04/2024},
}

@online{OWASP/Injection,
	author = {{OWASP Foundation, Inc}},
	title = {A1:2017-Injection},
	year = {2017},
	url = { https://owasp.org/www-project-top-ten/2017/A1_2017-Injection },
	note = {Last accessed at 04/04/2024},
}

@online{OWASP/Risks2017,
	author = {{OWASP Foundation, Inc}},
	title = {OWASP Top 10 Application Security Risks - 2017},
	year = {2017},
	url = { https://owasp.org/www-project-top-ten/2017/Top_10.html },
	note = {Last accessed at 04/04/2024},
}

@online{OWASP/Risks2021,
	author = {{OWASP Foundation, Inc}},
	title = {OWASP Top 10 - 2021},
	year = {2021},
	url = { https://owasp.org/Top10/ },
	note = {Last accessed at 04/04/2024},
}

@online{OWASP/Top10,
	author = {{OWASP Foundation, Inc}},
	title = {OWASP Top Ten},
	year = {2021},
	url = { https://owasp.org/www-project-top-ten/ },
	note = {Last accessed at 04/04/2024},
}

@online{secjuice/wafeva3,
	author = {{theMiddle}},
	title = {Web Application Firewall (WAF) Evasion Techniques #3},
	year = {2018},
	url = { https://www.secjuice.com/web-application-firewall-waf-evasion/ },
	note = {Last accessed at 08/04/2024},
}

@online{secjuice/wafeva2,
	author = {{theMiddle}},
	title = {Web Application Firewall (WAF) Evasion Techniques #2},
	year = {2018},
	url = {
	       https://medium.com/secjuice/web-application-firewall-waf-evasion-techniques-2-125995f3e7b0
	       },
	note = {Last accessed at 08/04/2024},
}

@online{secjuice/wafeva1,
	author = {{theMiddle}},
	title = {Web Application Firewall (WAF) Evasion Techniques #1},
	year = {2017},
	url = { https://medium.com/secjuice/waf-evasion-techniques-718026d693d8 },
	note = {Last accessed at 08/04/2024},
}

@online{exploringes6/templatelit,
	author = {{Dr. Axel Rauschmayer}},
	title = {Exploring ES6, Chapter: Template literals},
	url = { https://exploringjs.com/es6/ch_template-literals.html },
	note = {Last accessed at 24/04/2024},
}


@online{onecons/wafbypass,
	author = {{Rafael Scheel}},
	title = {Web Application Firewall Bypass},
	year = {2016},
	url = {
	       https://www.oneconsult.com/de/blog/pentesters-diary/web-application-firewall-bypass/
	       },
	note = {Last accessed at 24/04/2024},
}


@online{js/eval,
	author = {{MDN contributors}},
	title = {eval()},
	year = {2024},
	url = {
	       https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval?retiredLocale=de
	       },
	note = {Last accessed at 28/04/2024},
}

@online{js/brackets,
	author = {{Ilya Kantor}},
	title = {Square brackets},
	year = {2024},
	url = { https://javascript.info/object#square-brackets },
	note = {Last accessed at 29/04/2024},
}

@online{js/constructor,
	author = {{Ilya Kantor}},
	title = {Constructor function},
	year = {2024},
	url = { https://javascript.info/constructor-new#constructor-function },
	note = {Last accessed at 30/04/2024},
}

@online{js/array,
	author = {{MDN contributors}},
	title = {Array},
	year = {2024},
	url = {
	       https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array#description
	       },
	note = {Last accessed at 30/04/2024},
}

@online{js/function,
	author = {{MDN contributors}},
	title = {Function},
	year = {2024},
	url = {
	       https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function
	       },
	note = {Last accessed at 30/04/2024},
}

@online{js/object,
	author = {{MDN contributors}},
	title = {Object.prototype.constructor},
	year = {2024},
	url = {
	       https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor
	       },
	note = {Last accessed at 30/04/2024},
}

@online{js/+,
	author = {{MDN contributors}},
	title = {Addition (+)},
	year = {2024},
	url = {
	       https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Addition
	       },
	note = {Last accessed at 30/04/2024},
}

@online{js/primitiveCoercion,
	author = {{MDN contributors}},
	title = {Primitive coercion},
	year = {2024},
	url = {
	       https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#primitive_coercion
	       },
	note = {Last accessed at 30/04/2024},
}

@online{js/stringbrackets,
	author = {{MDN contributors}},
	title = {Character access},
	year = {2024},
	url = {
	       https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String#character_access
	       },
	note = {Last accessed at 30/04/2024},
}

@online{js/prompt,
	author = {{MDN contributors}},
	title = {Window: prompt() method},
	year = {2024},
	url = {
	       https://developer.mozilla.org/en-US/docs/Web/API/Window/prompt#defaultvalue
	       },
	note = {Last accessed at 07/05/2024},
}

@online{medium/allypetitt,
	author = {{Ally Petitt}},
	title = {5 Ways I Bypassed Your Web Application Firewall (WAF)},
	year = {2023},
	url = {
	       https://medium.com/@allypetitt/5-ways-i-bypassed-your-web-application-firewall-waf-43852a43a1c2
	       },
	note = {Last accessed at 09/05/2024},
}

@online{regex/jan,
	author = {{Jan Goyvaerts}},
	title = {Turning Modes On and Off for Only Part of The Regular Expression},
	year = {2023},
	url = { https://www.regular-expressions.info/modifiers.html },
	note = {Last accessed at 09/05/2024},
}

@online{windows/casesensitive,
	author = {{Microsoft Learn contributors}},
	title = {Differences between Windows and Linux case sensitivity},
	year = {2022},
	url = {
	       https://learn.microsoft.com/en-us/windows/wsl/case-sensitivity#differences-between-windows-and-linux-case-sensitivity
	       },
	note = {Last accessed at 09/05/2024},
}

@online{asecsite/jsobf1,
	title = {Obfuscating malware},
	year = {2024},
	author = {Buchanan, William J},
	url = {https://asecuritysite.com/subjects/chapter47},
	note = {Last accessed at 09/05/2024},
}

@online{oracle/sqlcomments,
	title = {Comments Within SQL Statements},
	author = {Oracle},
	url = {
	       https://docs.oracle.com/cd/B13789_01/server.101/b10759/sql_elements006.htm
	       },
	note = {Last accessed at 09/05/2024},
}

@online{http/contenttype,
	author = {{MDN contributors}},
	title = {Content-Type},
	year = {2024},
	url = {
	       https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type
	       },
	note = {Last accessed at 09/05/2024},
}

@misc{rfc3986,
	series = {Request for Comments},
	number = 3986,
	howpublished = {RFC 3986},
	publisher = {RFC Editor},
	doi = {10.17487/RFC3986},
	url = {https://www.rfc-editor.org/info/rfc3986},
	author = {Tim Berners-Lee and Roy T. Fielding and Larry M Masinter},
	title = {{Uniform Resource Identifier (URI): Generic Syntax}},
	pagetotal = 61,
	year = 2005,
	month = jan,
	abstract = {A Uniform Resource Identifier (URI) is a compact sequence of
	            characters that identifies an abstract or physical resource. This
	            specification defines the generic URI syntax and a process for
	            resolving URI references that might be in relative form, along
	            with guidelines and security considerations for the use of URIs
	            on the Internet. The URI syntax defines a grammar that is a
	            superset of all valid URIs, allowing an implementation to parse
	            the common components of a URI reference without knowing the
	            scheme-specific requirements of every possible identifier. This
	            specification does not define a generative grammar for URIs; that
	            task is performed by the individual specifications of each URI
	            scheme. {[}STANDARDS-TRACK{]}},
}

@misc{rfc3986/sec2.4,
	series = {Request for Comments},
	number = 3986,
	howpublished = {RFC 3986},
	publisher = {RFC Editor},
	doi = {10.17487/RFC3986},
	url = {https://datatracker.ietf.org/doc/html/rfc3986#section-2.4},
	author = {Tim Berners-Lee and Roy T. Fielding and Larry M Masinter},
	title = {{Uniform Resource Identifier (URI): Generic Syntax}},
	pagetotal = 61,
	year = 2005,
	month = jan,
	abstract = {A Uniform Resource Identifier (URI) is a compact sequence of
	            characters that identifies an abstract or physical resource. This
	            specification defines the generic URI syntax and a process for
	            resolving URI references that might be in relative form, along
	            with guidelines and security considerations for the use of URIs
	            on the Internet. The URI syntax defines a grammar that is a
	            superset of all valid URIs, allowing an implementation to parse
	            the common components of a URI reference without knowing the
	            scheme-specific requirements of every possible identifier. This
	            specification does not define a generative grammar for URIs; that
	            task is performed by the individual specifications of each URI
	            scheme. {[}STANDARDS-TRACK{]}},
}

@online{modsec/recconf,
	author = {{OWASP ModSecurity}},
	title = {modsecurity.conf-recommended},
	year = {2024},
	url = {
	       https://github.com/owasp-modsecurity/ModSecurity/blob/v3/master/modsecurity.conf-recommended
	       },
	note = {Last accessed at 10/05/2024},
}

@online{crs/410dl,
	author = {{CRS Project}},
	title = {CRS v4.1.0},
	year = {2024},
	url = {
	       https://github.com/coreruleset/coreruleset/archive/refs/tags/v4.1.0.tar.gz
	       },
	note = {Last accessed at 10/05/2024},
}

@online{unicode/normalization,
	author = {{Ken Whistler}},
	title = {Unicode Normalization Forms},
	year = {2023},
	url = { https://www.unicode.org/reports/tr15/ },
	note = {Last accessed at 11/05/2024},
}

@online{rfc4627,
	author = {{Douglas Crockford}},
	title = {The application/json Media Type for JavaScript Object Notation},
	year = {2006},
	url = { https://www.ietf.org/rfc/rfc4627.txt },
	note = {Last accessed at 11/05/2024},
}

@online{swigger/storedxss,
	author = {{PortSwigger}},
	title = {Stored XSS},
	url = { https://portswigger.net/web-security/cross-site-scripting/stored },
	note = {Last accessed at 11/05/2024},
}

@online{aws/webapp,
	author = {{Amazon Web Services, Inc.}},
	title = {What is a Web Application?},
	url = { https://aws.amazon.com/what-is/web-application/ },
	note = {Last accessed at 06/06/2024},
}

@online{stackpath/webapp,
	author = {{Stackpath}},
	title = {What is a Web Application?},
	url = { https://www.stackpath.com/edge-academy/what-is-a-web-application/ },
	note = {Last accessed at 06/06/2024},
}

@online{mdn/http,
	author = {{MDN contributors}},
	title = {An overview of HTTP},
	url = { https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview },
	note = {Last accessed at 09/06/2024},
}

@online{ubuntu/phpmyadmin,
	author = {{Canonical Ubuntu}},
	title = {How to install and configure phpMyAdmin},
	url = {
	       https://ubuntu.com/server/docs/how-to-install-and-configure-phpmyadmin
	       },
	note = {Last accessed at 10/06/2024},
}

@online{phpmyadmin/overview,
	author = {{phpMyAdmin contributors}},
	title = {About},
	url = {https://www.phpmyadmin.net/},
	note = {Last accessed at 10/06/2024},
}

@online{phpmyadmin/quickinstall,
	author = {{phpMyAdmin contributors}},
	title = {Quick Install},
	url = {https://docs.phpmyadmin.net/en/latest/setup.html#quick-install-1},
	note = {Last accessed at 10/06/2024},
}

@online{phpmyadmin/signon,
	author = {{phpMyAdmin contributors}},
	title = {Signon authentication mode},
	url = {https://docs.phpmyadmin.net/en/latest/setup.html#auth-signon},
	note = {Last accessed at 10/06/2024},
}

@online{OWASP/forcebrowsing,
	author = {{OWASP Foundation, Inc}},
	title = {Forced browsing},
	url = { https://owasp.org/www-community/attacks/Forced_browsing },
	note = {Last accessed at 10/06/2024},
}

@online{mitre/XSS,
	author = {{The MITRE Corporation}},
	title = {CWE-79: Improper Neutralization of Input During Web Page Generation
	         ('Cross-site Scripting')},
	url = { https://cwe.mitre.org/data/definitions/79.html },
	year = {2024},
	note = {Last accessed at 10/06/2024},
}

@online{nist/did,
	author = {{National Institute of Standards and Technology (NIST)}},
	title = {defense-in-depth},
	url = { https://csrc.nist.gov/glossary/term/defense_in_depth },
	year = {2019},
	note = {Last accessed at 10/06/2024},
}
 
@online{OWASP/waf,
	author = {{OWASP Foundation, Inc}},
	title = {Web Application Firewall},
	url = {https://owasp.org/www-community/Web_Application_Firewall},
	note = {Last accessed at 12/06/2024},
}

@online{f5/waf,
	author = {{F5, Inc}},
	title = {What is a Web Application Firewall?},
	url = {https://www.f5.com/glossary/web-application-firewall-waf},
	note = {Last accessed at 12/06/2024},
}

@online{OWASP/crsfpt,
	author = {{OWASP Foundation, Inc}},
	title = {False Positives and Tuning},
	url = { https://coreruleset.org/docs/concepts/false_positives_tuning/},
	note = {Last accessed at 12/06/2024},
}

@misc{rfc7230,
	series = {Request for Comments},
	number = 7230,
	howpublished = {RFC 7230},
	publisher = {RFC Editor},
	doi = {10.17487/RFC7230},
	url = {https://www.rfc-editor.org/info/rfc7230},
	author = {Roy T. Fielding and Julian Reschke},
	title = {{Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing
	         }},
	pagetotal = 89,
	year = 2014,
	month = jun,
	abstract = {The Hypertext Transfer Protocol (HTTP) is a stateless
	            application-level protocol for distributed, collaborative,
	            hypertext information systems. This document provides an overview
	            of HTTP architecture and its associated terminology, defines the
	            "http" and "https" Uniform Resource Identifier (URI) schemes,
	            defines the HTTP/1.1 message syntax and parsing requirements, and
	            describes related security concerns for implementations.},
}

@online{palo/waf,
	author = {{Palo Alto Networks}},
	title = {What Is a WAF?},
	url = {
	       https://www.paloaltonetworks.com/cyberpedia/what-is-a-web-application-firewall
	       },
	note = {Last accessed at 12/06/2024},
}

@online{modsec/home,
	author = {{OWASP ModSecurity}},
	title = {ModSecurity},
	year = {2024},
	url = { https://github.com/owasp-modsecurity/ModSecurity },
	note = {Last accessed at 12/06/2024},
}

@online{modsec/nginx,
	author = {{OWASP ModSecurity}},
	title = {ModSecurity-nginx},
	year = {2024},
	url = { https://github.com/owasp-modsecurity/ModSecurity-nginx },
	note = {Last accessed at 12/06/2024},
}

@online{OWASP/crshome,
	author = {{OWASP Foundation, Inc}},
	title = {What Is the Core Rule Set?},
	url = { https://coreruleset.org/docs/#what-is-the-core-rule-set },
	note = {Last accessed at 12/06/2024},
}

@online{js/alert,
	author = {{MDN contributors}},
	title = {Window: alert() method},
	year = {2023},
	url = { https://developer.mozilla.org/en-US/docs/Web/API/Window/alert },
	note = {Last accessed at 14/06/2024},
}

@online{js/taggedtemplates,
	author = {{MDN contributors}},
	title = {Tagged templates},
	year = {2024},
	url = {
	       https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#tagged_templates
	       },
	note = {Last accessed at 14/06/2024},
}

@online{OWASP/Injection21,
	author = {{OWASP Foundation, Inc}},
	title = {A03:2021-Injection},
	year = {2021},
	url = {https://owasp.org/Top10/A03_2021-Injection/},
	note = {Last accessed at 15/06/2024},
}

@online{statista/mostusedlang,
	author = {{Statista}},
	title = {Most used programming languages among developers worldwide as of
	         2023},
	year = {2023},
	url = {
	       https://www.statista.com/statistics/793628/worldwide-developer-survey-most-used-languages/
	       },
	note = {Last accessed at 15/06/2024},
}

@online{kangax/compattable,
	author = {{kangax \& webbedspace \& zloirock}},
	title = {ECMAScript compatibility table},
	year = {2024},
	url = { https://compat-table.github.io/compat-table/es2016plus/ },
	note = {Last accessed at 15/06/2024},
}

@online{explorejs/ecmascript,
	author = {{Dr. Axel Rauschmayer}},
	title = {Exploring ES6, Chapter: JavaScript versus ECMAScript},
	url = {
	       https://exploringjs.com/es6/ch_about-es6.html#sec_javascript-vs-ecmascript
	       },
	note = {Last accessed at 15/06/2024},
}

@online{ecma/intro,
	author = {{ECMAScript community}},
	title = {ECMAScript® 2023 Language Specification},
	url = { https://262.ecma-international.org/14.0/#sec-intro },
	year = {2023},
	note = {Last accessed at 15/06/2024},
}

@online{ecma/release,
	author = {{ECMAScript community}},
	title = {ES2023},
	url = {https://github.com/tc39/ecma262/releases/tag/es2023},
	year = {2023},
	note = {Last accessed at 15/06/2024},
}

@online{aws/waflimits,
	author = {{Amazon Web Service, Inc.}},
	title = {AWS WAF quotas},
	url = {https://docs.aws.amazon.com/waf/latest/developerguide/limits.html},
	note = {Last accessed at 17/06/2024},
}

@online{ms/azurewaflimits,
	author = {{Microsoft}},
	title = {Limits},
	url = {
	       https://learn.microsoft.com/en-us/azure/web-application-firewall/ag/application-gateway-waf-request-size-limits#limits
	       },
	year = {2024},
	note = {Last accessed at 17/06/2024},
}

@online{ms/appgatewaylimits,
	author = {{Microsoft}},
	title = {Application Gateway limits},
	url = {
	       https://learn.microsoft.com/en-us/azure/azure-resource-manager/management/azure-subscription-service-limits#application-gateway-limits
	       },
	year = {2024},
	note = {Last accessed at 17/06/2024},
}

@online{akamai/waflimits,
	author = {{Akamai Technologies}},
	title = {ArticlesCan WAF inspect all arguments and values in request body?},
	url = {
	       https://community.akamai.com/customers/s/article/Can-WAF-inspect-all-arguments-and-values-in-request-body?language=en_US
	       },
	year = {2022},
	note = {Last accessed at 17/06/2024},
}

@online{cloudflare/limits,
	author = {{Cloudflare}},
	title = {HTTP request body fields},
	url = {
	       https://developers.cloudflare.com/ruleset-engine/rules-language/fields/#http-request-body-fields
	       },
	year = {2024},
	note = {Last accessed at 17/06/2024},
}

@online{mk/aurebesh,
	author = {{Martin Kleppe}},
	title = {aurebesh.js - Translate JavaScript to other writing systems.},
	url = { https://aem1k.com/aurebesh.js/#A%2CB%2CC%2CD%2CE%2CF%2CG%2CH },
	note = {Last accessed at 21/06/2024},
}

@online{mk/jsfuck,
	author = {{Martin Kleppe}},
	title = {JSFuck},
	url = { https://jsfuck.com/ },
	note = {Last accessed at 21/06/2024},
}

@online{mk/five,
	author = {{Martin Kleppe}},
	title = {$five =$+[]},
	url = {https://aem1k.com/five/},
	note = {Last accessed at 30/06/2024},
}

@online{tc39/pipeline,
	author = {{tc39/proposal-pipeline-operator}},
	title = {Pipe Operator (|>) for JavaScript},
	year = {2023},
	url = { https://github.com/tc39/proposal-pipeline-operator },
	note = {Last accessed at 30/06/2024},
}

@online{comp/uni,
	author = {{Compart AG}},
	title = {Unicode Character (U+FE69)},
	year = {2021},
	url = {https://www.compart.com/en/unicode/U+FE69#UNC_DB},
	note = {Last accessed at 08/07/2024},
}

@online{python/normalization,
	author = {{Python Software Foundation}},
	title = {unicodedata — Unicode Database},
	year = {2024},
	url = {
	       https://docs.python.org/3/library/unicodedata.html#unicodedata.normalize
	       },
	note = {Last accessed at 08/07/2024},
}

@online{js/builtin,
	author = {{MDN contributors}},
	title = {Standard built-in objects},
	year = {2024},
	url = {
	       https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects
	       },
	note = {Last accessed at 14/07/2024},
}

@online{www/html,
	author = {{WHATWG}},
	title = {HTML Living Standard - Character references},
	year = {2024},
	url = {
	       https://html.spec.whatwg.org/multipage/syntax.html#character-references
	       },
	note = {Last accessed at 14/07/2024},
}

@online{enc/diffc,
	author = {{www.string-functions.com}},
	title = {Encoding Problem Table - Encoding from Unicode (UTF-8) (code page
	         65001, utf-8) to Latin 9 (ISO) (code page 28605, iso-8859-15)},
	year = {2024},
	url = {
	       https://string-functions.com/encodingtable.aspx?encoding=65001&decoding=28605
	       },
	note = {Last accessed at 28/07/2024},
}

@online{enc/diffb,
	author = {{www.string-functions.com}},
	title = {Encoding Problem Table - Encoding from Unicode (UTF-8) (code page
	         65001, utf-8) to Western European (ISO) (code page 28591,
	         iso-8859-1) },
	year = {2024},
	url = {
	       https://string-functions.com/encodingtable.aspx?encoding=65001&decoding=28591
	       },
	note = {Last accessed at 28/07/2024},
}

@online{enc/diffa,
	author = {{www.string-functions.com}},
	title = {Encoding Problem Table - Encoding from Unicode (UTF-8) (code page
	         65001, utf-8) to Western European (Windows) (code page 1252,
	         Windows-1252)},
	year = {2024},
	url = {
	       https://string-functions.com/encodingtable.aspx?encoding=65001&decoding=1252
	       },
	note = {Last accessed at 14/07/2024},
}

@online{mk/elementsVid,
	author = {{Martin Kleppe}},
	title = {3L3M3NT5 — Martin Kleppe},
	url = {
	       https://www.youtube.com/watch?v=p0X9UlqarCU&list=PLttm25JhpvA7V0Ol0_ryuRRR_45_L0bLH&t=1253s
	       },
	note = {Last accessed at 28/07/2024},
}

@online{js/fromCharCode,
	author = {{MDN contributors}},
	title = {String.fromCharCode()},
	year = {2024},
	url = {
	       https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCharCode
	       },
	note = {Last accessed at 30/07/2024},
}

@online{js/autosemi,
	author = {{MDN contributors}},
	title = {Automatic semicolon insertion},
	year = {2024},
	url = {
	       https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#automatic_semicolon_insertion
	       },
	note = {Last accessed at 31/07/2024},
}

@online{exploringes6/escapeseq,
	author = {{Dr. Axel Rauschmayer}},
	title = {Exploring ES6, Chapter: Escape sequences in ES6},
	url = {https://exploringjs.com/es6/ch_unicode.html#sec_escape-sequences},
	note = {Last accessed at 01/08/2024},
}


@online{bynens/escape,
	author = {{Mathias Bynens}},
	title = {JavaScript character escape sequences},
	url = {https://mathiasbynens.be/notes/javascript-escapes},
	note = {Last accessed at 01/08/2024},
}

@online{js/lexicalgrammar,
	author = {{MDN contributors}},
	title = {Lexical grammar},
	year = {2024},
	url = {
	       https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_gramma
	       },
	note = {Last accessed at 01/08/2024},
}

@online{modsec/trans,
	author = {{OWASP ModSecurity}},
	title = {Transformation functions},
	year = {2024},
	url = {
	       https://github.com/owasp-modsecurity/ModSecurity/wiki/Reference-Manual-%28v3.x%29#transformation-functions
	       },
	note = {Last accessed at 01/08/2024},
}

@inproceedings{rw/demetrio,
	author = {Demetrio, Luca and Valenza, Andrea and Costa, Gabriele and Lagorio
	          , Giovanni},
	title = {WAF-A-MoLE: evading web application firewalls through adversarial
	         machine learning},
	year = {2020},
	isbn = {9781450368667},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3341105.3373962},
	doi = {10.1145/3341105.3373962},
	abstract = {Web Application Firewalls are widely used in production
	            environments to mitigate security threats like SQL injections.
	            Many industrial products rely on signature-based techniques, but
	            machine learning approaches are becoming more and more popular.
	            The main goal of an adversary is to craft semantically malicious
	            payloads to bypass the syntactic analysis performed by a WAF.In
	            this paper, we present WAF-A-MoLE, a tool that models the
	            presence of an adversary. This tool leverages on a set of
	            mutation operators that alter the syntax of a pay load without
	            affecting the original semantics. We evaluate the performance of
	            the tool against existing WAFs, that we trained using our
	            publicly available SQL query dataset. We show that WAF-A-MoLE
	            bypasses all the considered machine learning based WAFs.},
	booktitle = {Proceedings of the 35th Annual ACM Symposium on Applied
	             Computing},
	pages = {1745–1752},
	numpages = {8},
	keywords = {web application firewall, sql injection, mutational fuzzing,
	            adversarial machine learning},
	location = {Brno, Czech Republic},
	series = {SAC '20},
}

@article{rw/mohammad,
	author = {Amouei, Mohammadhossein and Rezvani, Mohsen and Fateh, Mansoor},
	journal = {IEEE Transactions on Dependable and Secure Computing},
	title = {RAT: Reinforcement-Learning-Driven and Adaptive Testing for
	         Vulnerability Discovery in Web Application Firewalls},
	year = {2022},
	volume = {19},
	number = {5},
	pages = {3371-3386},
	keywords = {Testing;Payloads;Security;Radio access
	            technologies;Databases;Password;Browsers;Security
	            testing;injection attack;adaptive testing;web application
	            firewall (WAF);test case clustering},
	doi = {10.1109/TDSC.2021.3095417},
}

@article{rw/derLI,
	author = {Li, Ke and Yang, Heng and Visser, Willem},
	journal = {IEEE Transactions on Software Engineering},
	title = {DaNuoYi: Evolutionary Multi-Task Injection Testing on Web
	         Application Firewalls},
	year = {2023},
	volume = {},
	number = {},
	pages = {1-21},
	keywords = {Testing;Multitasking;Semantics;Fuzzing;Task
	            analysis;Syntactics;Source coding;Web application
	            firewall;security testing;injection
	            testing;multi-tasking;search-based software engineering},
	doi = {10.1109/TSE.2023.3343716},
}

@online{crs/creating,
	author = {{CRS Project}},
	title = {Making Rules},
	url = { https://coreruleset.org/docs/rules/creating/ },
	note = {Last accessed at 04/08/2024},
}

@online{modsec/secRule,
	author = {{OWASP ModSecurity}},
	title = {SecRule},
	year = {2024},
	url = {
	       https://github.com/owasp-modsecurity/ModSecurity/wiki/Reference-Manual-(v2.x)#SecRule
	       },
	note = {Last accessed at 01/08/2024},
}

@online{modsec/transjsdecode,
	author = {{OWASP ModSecurity}},
	title = {jsDecode},
	year = {2024},
	url = {
	       https://github.com/owasp-modsecurity/ModSecurity/wiki/Reference-Manual-%28v3.x%29#jsdecode
	       },
	note = {Last accessed at 05/08/2024},
}


@online{acunetix/storedxss,
	author = {{Acunetix}},
	title = {Stored XSS},
	url = {
	       https://cdn.acunetix.com/wp-content/uploads/2018/10/11110458/Diagram-Describing-Blind-XSS-Attack.gif
	       },
	note = {Last accessed at 06/08/2024},
}


@online{portswigger/reflxss,
	author = {{Portswigger}},
	title = {Reflected XSS},
	url = { https://portswigger.net/web-security/images/cross-site-scripting.svg
	       },
	note = {Last accessed at 06/08/2024},
}


@online{cyberpunk/domxss,
	author = {{Cyberpunk}},
	title = {Cross-Site Scripting (XSS)},
	url = {
	       https://www.cyberpunk.rs/cross-site-scripting-xss-explanation-details
	       },
	note = {Last accessed at 06/08/2024},
}
